#include <types.h>
#include <kern/unistd.h>
#include <syscall.h>
#include <lib.h>

int sys_read(int fd, userptr_t buf_ptr, size_t size) {
  int i;
  char *str = (char*) buf_ptr;

  if (fd != STDIN_FILENO) {
    kprintf("sys_read supportd only stdin.\n");
    return -1;
  }

  for (i = 0; i < (int) size; i++) {
    str[i] = getch();
    if (str[i] < 0) {
      return -1;
    }
  }

  return (int)size;
}


int sys_write(int fd, userptr_t buf_ptr, size_t size) {
  int i;
  char *str = (char*) buf_ptr;

  if (fd != STDOUT_FILENO && fd != STDERR_FILENO) {
    kprintf("sys_write supported only stdout.\n");
    return -1;
  }
 
  for (i = 0; i < (int) size; i++) {
    putch(str[i]);
  }

  return (int) size;
}
